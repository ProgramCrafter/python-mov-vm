
L6      mov     1028        [_sa]
        mov     1024        [_acf]
L7      mov     1024        maddr
        mov     1025        mul0
        mov     1023        mul1
        mov     mul         memory
        
        mov     $L40        addr

-- fn L9 (L -> [L9_l], R -> [L9_r], u -> [L9_u0],[L9_u1], ret -> [L9RET])
--   -> [L9_v]
L10     mov     [_sa]       add0
        mov     4           add1
        mov     [_sa]       [L9_v]
        mov     add         [_sa]
L11     mov     [L9_v]      maddr
        mov     [L9_u0]     memory
        mov     1           add1
L12     mov     maddr       add0
        mov     add         maddr
        mov     [L9_u1]     memory
L13     mov     maddr       add0
        mov     add         maddr
        mov     [L9_r]      memory
L14     mov     maddr       add0
        mov     add         maddr
        mov     [L9_l]      memory
L15     mov     [L9_l]      atz0
        mov     $L16        atz1
        mov     $L15.1      atz2
        mov     atz         addr
L15.1   mov     [L9_l]      add0
        mov     add         add0
        mov     add         maddr
        mov     [L9_v]      memory
L16     mov     [L9_r]      atz0
        mov     $L17        atz1
        mov     $L16.1      atz2
        mov     atz         addr
L16.1   mov     [L9_r]      add0
        mov     add         add0
        mov     add         add0
        mov     add         maddr
        mov     [L9_v]      memory
L17     mov     [L9RET]     addr

-- fn L18 (v -> [L18_v0],[L18_v1],[L18_v2],[L18_v3], ret -> [L18RET]) -> _
L19     mov     [L18_v2]    atz0
        mov     $L20        atz1
        mov     $L19.1      atz2
        mov     atz         addr
L19.1   mov     [L18_v2]    add0
        mov     3           add1
        mov     add         maddr
        mov     [L18_v3]    memory
L20     mov     [L18_v3]    atz0
        mov     $L21        atz1
        mov     $L20.1      atz2
        mov     atz         addr
L20.1   mov     [L18_v3]    add0
        mov     2           add1
        mov     add         maddr
        mov     [L18_v2]    memory
        mov     $L21.1      addr
L21     mov     [L18_v2]    [_acf]
L21.1   mov     [L18RET]    addr

-- extern "TIG"
-- fn L22 (size -> [size], ret -> [L22RET]) -> [L22_v]
L23     mov     [_acf]      [cur]
        mov     [cur]       maddr
        mov     memory      tlt0
        mov     [size]      tlt1
        mov     tlt         atz0
        mov     $L23.1      atz1
        mov     $L28        atz2
        mov     atz         addr
L23.1   mov     memory      sub0
        mov     [size]      sub1
        mov     0           [L9_l]
        mov     [cur]       [L9_r]
        mov     sub         [L9_u0]
        mov     [size]      [L9_u1]
        mov     $L23.2      [L9RET]
        mov     $L10        addr
L23.2   mov     [L9_v]      [_acf]
        mov     [L9_v]      [L22_v]
        mov     [L22RET]    addr
L28     mov     [cur]       add0
        mov     1           add1
        mov     [cur]       maddr
        mov     memory      [curf]
        mov     add         maddr
        mov     memory      [curs]
        mov     add         add0
        mov     add         maddr
        mov     memory      [nxt]
        
        mov     [nxt]       atz0
        mov     $L33        atz1
        mov     $L30        atz2
        mov     atz         addr
L30     mov     [nxt]       maddr
        mov     memory      sub0
        mov     [size]      sub1
        mov     [curf]      add0
        mov     [curs]      add1
        mov     sub         tlt0
        mov     add         tlt1
        mov     tlt         atz0
        mov     $L31        atz1
        mov     $L32        atz2
        mov     atz         addr
L31     mov     [cur]       [L9_l]
        mov     [nxt]       [L9_r]
        mov     sub         [L9_u0]
        mov     [size]      [L9_u1]
        mov     $L31.1      [L9RET]
        mov     $L10        addr
L31.1   mov     [L9_v]      [L22_v]
        mov     [L22RET]    addr
L32     mov     [nxt]       [cur]
        mov     $L28        addr
L33     mov     0           [L22_v]
        mov     [L22RET]    addr

-- extern "TIG"
-- fn L34 (v -> [L34_v0],[L34_v1],[L34_v2],[L34_v3], ret -> [L34RET]) -> _
L35     mov     [L34_v2]    [L18_v2]
        mov     [L34_v3]    [L18_v3]
        mov     [L34RET]    [L18RET] -- tail call
        mov     $L19        addr

-- extern "TIG"
-- fn L36 (v -> [L36_v0],[L36_v1],[L36_v2],[L36_v3], size -> [size],
--   ret -> [L36RET]) -> [L36_v]
L37     mov     $L38        [L22RET]
        mov     $L23        addr
L38     mov     [L22_v]     [L36_v]
        mov     [L22_v]     maddr
        mov     memory      [L36_i]
        mov     [L36_v0]    [L36_j]
        mov     [L36_v1]    sub0
        mov     1           sub1
        mov     1           add1
L39     mov     sub0        atz0
        mov     $L39.2      atz1
        mov     $L39.1      atz2
        mov     atz         addr
L39.1   mov     [L36_j]     maddr
        mov     memory      [L36_tmp]
        mov     [L36_j]     add0
        mov     add         [L36_j]
        mov     [L36_i]     maddr
        mov     [L36_tmp]   memory
        mov     [L36_i]     add0
        mov     add         [L36_i]
        mov     sub         sub0
        mov     $L39        addr
        -- deallocating old chunk
        -- inlined L34
L39.2   mov     [L36_v2]    [L18_v2]
        -- mov     [L36_v3]    [L18_v3]
        mov     [L36_v]     [L18_v3]
        mov     [L36RET]    [L18RET] -- tail call
        mov     $L19        addr

-- testing allocator

L40     mov     0           [size]
        mov     $L40.1      [L22RET]
        mov     $L23        addr
L40.1   mov     [L22_v]     [cs]
L41     mov     cio         [c]
        mov     [c]         add0
        mov     1           add1
        mov     add         atz0
        mov     $L41        atz1
        mov     $L42        atz2
        mov     atz         addr
L42     mov     [c]         sub0
        mov     32          sub1
        mov     sub         atz0
        mov     $L45        atz1
        mov     $L43        atz2
        mov     atz         addr
        -- reallocating string to add new character at the end
L43     mov     [cs]        maddr
        mov     memory      [L36_v0]
        mov     [cs]        add0
        mov     1           add1
        mov     add         maddr
        mov     memory      [L36_v1]
        -- new size
        mov     memory      add0
        mov     add         [size]
        mov     maddr       add0
        -- calculated new size
        mov     add         maddr
        mov     memory      [L36_v2]
        mov     add         add0
        mov     add         maddr
        mov     memory      [L36_v3]
        mov     $L44        [L36RET]
        mov     $L37        addr
        -- string reallocated
L44     mov     [L22_v]     [cs]
        mov     [cs]        maddr
        mov     memory      add0
        mov     [size]      add1
        mov     add         sub0
        mov     1           sub1
        mov     sub         maddr
        mov     [c]         memory
        mov     $L41        addr

-- printing string
L45     mov     [cs]        maddr
        mov     memory      add0
        mov     [size]      sub0
        mov     1           sub1
        mov     1           add1
L46     mov     sub0        atz0
        mov     $L50        atz1
        mov     $L46.1      atz2
        mov     atz         addr
L46.1   mov     add0        maddr
        mov     memory      cio
        
        mov     add         add0
        mov     sub         sub0
        mov     $L46        addr

-- no need to deallocate on exit :-)

L50     mov     cio     sub0
        mov     10      sub1 -- exit on Enter
        mov     sub     atz0
        mov     $L51    atz1
        mov     $L50    atz2
        mov     atz     addr

L51     mov     [_sa]   add0
        mov     16383   add1
        mov     add     addr
